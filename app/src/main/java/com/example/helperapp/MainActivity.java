package com.example.helperapp;import android.app.NotificationChannel;import android.app.NotificationManager;import android.content.Intent;import android.os.Build;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.ImageButton;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.NotificationCompat;import androidx.core.app.NotificationManagerCompat;import com.example.helperapp.User.UserAccount;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import com.google.firebase.messaging.FirebaseMessaging;import com.google.firebase.messaging.RemoteMessage;import java.util.ArrayList;import java.util.List;public class MainActivity extends AppCompatActivity {    private ImageButton mapButton, notificationButton, myinfoButton, settingButton;    private static final String CHANNEL_ID = "my_channel_id";    private static final int NOTIFICATION_ID = 1;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        mapButton = findViewById(R.id.mapButton);        notificationButton = findViewById(R.id.notificationButton);        myinfoButton = findViewById(R.id.myinfoButton);        settingButton = findViewById(R.id.settingButton);        createNotificationChannel();        // 맵으로 이동        mapButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(MainActivity.this, MapActivity.class);                startActivity(intent);            }        });        // 내정보로 이동        myinfoButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(MainActivity.this, MyinfoActivity.class);                startActivity(intent);            }        });        // 환경설정으로 이동        settingButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(MainActivity.this, BoardActivity.class);                startActivity(intent);            }        });        notificationButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                showNotification();            }        });    }    private void createNotificationChannel() {        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {            CharSequence name = getString(R.string.channel_name);            String description = getString(R.string.channel_description);            int importance = NotificationManager.IMPORTANCE_DEFAULT;            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);            channel.setDescription(description);            NotificationManager notificationManager = getSystemService(NotificationManager.class);            notificationManager.createNotificationChannel(channel);        }    }    private void showNotification() {        // 현재 사용자의 이름 가져오기        DatabaseReference userRef = FirebaseDatabase.getInstance().getReference().child("FirebaseEmailAccount/userAccount").child(FirebaseAuth.getInstance().getCurrentUser().getUid());        userRef.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                if (dataSnapshot.exists()) {                    UserAccount user = dataSnapshot.getValue(UserAccount.class);                    if (user != null) {                        String userName = user.getName();                        if (userName != null) {                            // 알림 생성                            String title = "도움이 필요해요!";                            String content = userName + "님이 지금 도움 요청을 하였어요!";                            NotificationCompat.Builder builder = new NotificationCompat.Builder(MainActivity.this, CHANNEL_ID)                                    .setSmallIcon(R.drawable.notification_icon)                                    .setContentTitle(title)                                    .setContentText(content)                                    .setPriority(NotificationCompat.PRIORITY_DEFAULT);                            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);                            notificationManager.notify(NOTIFICATION_ID, builder.build());                        }                    }                }            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {                Log.e("Firebase", "Error retrieving user data: " + databaseError.getMessage());            }        });    }}